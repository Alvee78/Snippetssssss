{
	"Pre_Calculate_Prime": {
		"prefix": "SieveOfEratosthenes",
		"body": [
		  "// Time Complexity: O(N*log(log(N)))",
		  "// Auxiliary Space: O(N)",
		  "bool prime[1000000 + 1];",
		  "void SieveOfEratosthenes()",
		  "{",
		  "    // Create a boolean array \"prime[0..n]\" and initialize",
		  "    // all entries it as true. A value in prime[i] will",
		  "    // finally be false if i is Not a prime, else true.",
		  "    int n = 1000000;",
		  "    memset(prime, true, sizeof(prime));",
		  " ",
		  "    for (int p = 2; p * p <= n; p++) {",
		  "        // If prime[p] is not changed, then it is a prime",
		  "        if (prime[p] == true) {",
		  "            // Update all multiples of p greater than or",
		  "            // equal to the square of it numbers which are",
		  "            // multiple of p and are less than p^2 are",
		  "            // already been marked.",
		  "            for (int i = p * p; i <= n; i += p)",
		  "                prime[i] = false;",
		  "        }",
		  "    }",
		  "}"
		],
		"description": "Pre_Calculate_Prime"
	  }
}
